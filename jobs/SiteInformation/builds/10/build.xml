<?xml version='1.0' encoding='UTF-8'?>
<build>
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>SitePair</name>
          <description></description>
          <value>YKT-HRS</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>StoreFront1</name>
          <description></description>
          <value>SF-01 10.10.10.11 YKT</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>StoreFront2</name>
          <description></description>
          <value>SF-01 10.30.30.31 HRS</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>DeliveryController1</name>
          <description></description>
          <value>DC-01 10.10.10.13 YKT</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>DeliveryController2</name>
          <description></description>
          <value>DC-01 10.30.30.33 HRS</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames class="hudson.model.ParametersDefinitionProperty$1">
        <outer-class>
          <parameterDefinitions>
            <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@1.4">
              <name>SitePair</name>
              <description></description>
              <randomName>choice-parameter-688583144922343</randomName>
              <visibleItemCount>3</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List nameslist = new ArrayList()

def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
sql.eachRow (&quot;select distinct SitePairName from sitepair;&quot;)
{
nameslist &lt;&lt; it.SitePairName
}
return nameslist</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <choiceType>PT_SINGLE_SELECT</choiceType>
              <filterable>false</filterable>
            </org.biouno.unochoice.ChoiceParameter>
            <org.biouno.unochoice.CascadeChoiceParameter plugin="uno-choice@1.4">
              <name>StoreFront1</name>
              <description></description>
              <randomName>choice-parameter-794989507665808</randomName>
              <visibleItemCount>2</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List storefront = new ArrayList()

def (site1, site2) = &quot;${SitePair}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;SF%&apos; and SiteName =&quot;+&quot;&apos;${site1}&apos;&quot;+&quot;;&quot;

sql.eachRow (query)
{
storefront &lt;&lt; it.ComponentType+&quot; &quot;+it.IPAddress+&quot; &quot;+it.SiteName

}
return storefront</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <parameters class="linked-hash-map">
                <entry>
                  <string>SitePair</string>
                  <string>YKT-HRS</string>
                </entry>
              </parameters>
              <referencedParameters>SitePair</referencedParameters>
              <choiceType>PT_SINGLE_SELECT</choiceType>
              <filterable>false</filterable>
            </org.biouno.unochoice.CascadeChoiceParameter>
            <org.biouno.unochoice.CascadeChoiceParameter plugin="uno-choice@1.4">
              <name>StoreFront2</name>
              <description></description>
              <randomName>choice-parameter-862249040857409</randomName>
              <visibleItemCount>2</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List storefront = new ArrayList()

def (site1, site2) = &quot;${SitePair}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;SF%&apos; and SiteName =&quot;+&quot;&apos;${site2}&apos;&quot;+&quot;;&quot;

sql.eachRow (query)
{
storefront &lt;&lt; it.ComponentType+&quot; &quot;+it.IPAddress+&quot; &quot;+it.SiteName

}
return storefront</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <parameters class="linked-hash-map">
                <entry>
                  <string>SitePair</string>
                  <string>YKT-HRS</string>
                </entry>
              </parameters>
              <referencedParameters>SitePair</referencedParameters>
              <choiceType>PT_SINGLE_SELECT</choiceType>
              <filterable>false</filterable>
            </org.biouno.unochoice.CascadeChoiceParameter>
            <org.biouno.unochoice.CascadeChoiceParameter plugin="uno-choice@1.4">
              <name>DeliveryController1</name>
              <description></description>
              <randomName>choice-parameter-884843117397931</randomName>
              <visibleItemCount>2</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List storefront = new ArrayList()

def (site1, site2) = &quot;${SitePair}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;DC%&apos; and SiteName =&quot;+&quot;&apos;${site1}&apos;&quot;+&quot;;&quot;

sql.eachRow (query)
{
storefront &lt;&lt; it.ComponentType+&quot; &quot;+it.IPAddress+&quot; &quot;+it.SiteName

}
return storefront</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <parameters class="linked-hash-map">
                <entry>
                  <string>SitePair</string>
                  <string>YKT-HRS</string>
                </entry>
              </parameters>
              <referencedParameters>SitePair</referencedParameters>
              <choiceType>PT_SINGLE_SELECT</choiceType>
              <filterable>false</filterable>
            </org.biouno.unochoice.CascadeChoiceParameter>
            <org.biouno.unochoice.CascadeChoiceParameter plugin="uno-choice@1.4">
              <name>DeliveryController2</name>
              <description></description>
              <randomName>choice-parameter-884917695808076</randomName>
              <visibleItemCount>2</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List storefront = new ArrayList()

def (site1, site2) = &quot;${SitePair}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;DC%&apos; and SiteName =&quot;+&quot;&apos;${site2}&apos;&quot;+&quot;;&quot;

sql.eachRow (query)
{
storefront &lt;&lt; it.ComponentType+&quot; &quot;+it.IPAddress+&quot; &quot;+it.SiteName

}
return storefront</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <parameters class="linked-hash-map">
                <entry>
                  <string>SitePair</string>
                  <string>YKT-HRS</string>
                </entry>
              </parameters>
              <referencedParameters>SitePair</referencedParameters>
              <choiceType>PT_SINGLE_SELECT</choiceType>
              <filterable>false</filterable>
            </org.biouno.unochoice.CascadeChoiceParameter>
          </parameterDefinitions>
        </outer-class>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.plugins.git.util.BuildData plugin="git@2.4.2">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.19.5">
              <sha1>a20a07773995278fde383223a54897761fc33799</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>10</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/nooknaga/SiteInfo.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@2.4.2">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/master</string>
          <list/>
        </entry>
      </tags>
      <ws>C:\Users\nagaraj.nookala\.jenkins\jobs\SiteInformation\workspace</ws>
    </hudson.plugins.git.GitTagAction>
    <hudson.scm.SCMRevisionState_-None/>
  </actions>
  <queueId>1</queueId>
  <timestamp>1467558542448</timestamp>
  <startTime>1467558542507</startTime>
  <result>SUCCESS</result>
  <duration>8150</duration>
  <charset>windows-1252</charset>
  <keepLog>false</keepLog>
  <builtOn></builtOn>
  <workspace>C:\Users\nagaraj.nookala\.jenkins\jobs\SiteInformation\workspace</workspace>
  <hudsonVersion>1.651.3</hudsonVersion>
  <scm class="hudson.plugins.git.GitChangeLogParser" plugin="git@2.4.2">
    <authorOrCommitter>false</authorOrCommitter>
  </scm>
  <culprits class="com.google.common.collect.EmptyImmutableSortedSet"/>
</build>