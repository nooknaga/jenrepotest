<?xml version='1.0' encoding='UTF-8'?>
<build>
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>SitePair</name>
          <description></description>
          <value>YKT-HRS</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>DCTest</name>
          <description></description>
          <value></value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames class="hudson.model.ParametersDefinitionProperty$1">
        <outer-class>
          <parameterDefinitions>
            <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@1.4">
              <name>SitePair</name>
              <description></description>
              <randomName>choice-parameter-688583144922343</randomName>
              <visibleItemCount>3</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List nameslist = new ArrayList()

def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
sql.eachRow (&quot;select distinct SitePairName from sitepair;&quot;)
{
nameslist &lt;&lt; it.SitePairName
}
return nameslist</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <choiceType>PT_SINGLE_SELECT</choiceType>
              <filterable>false</filterable>
            </org.biouno.unochoice.ChoiceParameter>
            <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@1.4">
              <name>DCTest</name>
              <description></description>
              <randomName>choice-parameter-1195180888996813</randomName>
              <visibleItemCount>8</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List storefront1 = new ArrayList()
List storefront2 = new ArrayList()

def (site1, site2) = &quot;${SitePair}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query1 = &quot;select IPAddress, SiteName, HostName from sfdcinformation where ComponentType like &apos;DC%&apos; and (SiteName like &quot;+&quot;&apos;${site1}&apos;&quot;+&quot; or SiteName like &quot;+&quot;&apos;${site2}&apos;&quot;+&quot;);&quot;

sql.eachRow (query1)
{
storefront1 &lt;&lt; it.IPAddress+&quot;  &quot;+it.SiteName+&quot;  &quot;+it.HostName

}

def query2 = &quot;select IPAddress, SiteName, HostName from sfdcinformation where ComponentType like &apos;SF%&apos; and (SiteName like &quot;+&quot;&apos;${site1}&apos;&quot;+&quot; or SiteName like &quot;+&quot;&apos;${site2}&apos;&quot;+&quot;);&quot;
sql.eachRow (query2)
{
storefront2 &lt;&lt; it.IPAddress+&quot;  &quot;+it.SiteName+&quot;  &quot;+it.HostName
}
storefront1.addAll(storefront2)

return storefront1</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <parameters class="linked-hash-map">
                <entry>
                  <string>jenkinsProject</string>
                  <hudson.model.FreeStyleProject>
                    <actions/>
                    <description></description>
                    <keepDependencies>false</keepDependencies>
                    <properties>
                      <hudson.model.ParametersDefinitionProperty reference="../../../../../../.."/>
                    </properties>
                    <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.2">
                      <configVersion>2</configVersion>
                      <userRemoteConfigs>
                        <hudson.plugins.git.UserRemoteConfig>
                          <url>https://github.com/nooknaga/SiteInfo.git</url>
                          <credentialsId>91db45a3-3084-4a31-87ac-5e73c13bd35d</credentialsId>
                        </hudson.plugins.git.UserRemoteConfig>
                      </userRemoteConfigs>
                      <branches>
                        <hudson.plugins.git.BranchSpec>
                          <name>*/master</name>
                        </hudson.plugins.git.BranchSpec>
                      </branches>
                      <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
                      <submoduleCfg class="list"/>
                      <extensions/>
                    </scm>
                    <canRoam>true</canRoam>
                    <disabled>false</disabled>
                    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
                    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
                    <triggers/>
                    <concurrentBuild>false</concurrentBuild>
                    <builders>
                      <org.jenkinsci.plugins.envinject.EnvInjectBuilder plugin="envinject@1.92.1">
                        <info>
                          <propertiesFilePath>C:/Users/nagaraj.nookala/.jenkins/jobs/SiteInformation/workspace/env.properties</propertiesFilePath>
                        </info>
                      </org.jenkinsci.plugins.envinject.EnvInjectBuilder>
                      <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.29">
                        <scriptSource class="hudson.plugins.groovy.StringScriptSource">
                          <command>import hudson.model.*
import groovy.sql.Sql

//Accessing the site pair active choice parameter
def sitelist = build.buildVariableResolver.resolve(&quot;SitePair&quot;)

//Declaring lists to store different information for a site
List IPs = new ArrayList()
List sysname = new ArrayList()
List hatype = new ArrayList()
List component = new ArrayList()
List storefront = new ArrayList()

//splitting the site pair and getting the storefront and delivery controllers information for the site1 and feed to arrays
def (site1, site2) = &quot;${sitelist}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query1 = &quot;select ComponentType, IPAddress, HostName, SiteName, HAType from sfdcinformation where SiteName like &quot;+&quot;&apos;${site1}&apos;&quot;+&quot;;&quot;

sql.eachRow (query1)
{
  component &lt;&lt; it.ComponentType
  IPs &lt;&lt; it.IPAddress
  sysname &lt;&lt; it.HostName
  hatype &lt;&lt; it.HAType
}

def size = component.size()

//Defining variables to store the hostnames information for store fronts and delivery controllers of both sites
def Site1SFServer1
def Site1SFServer2
def Site2SFServer1
def Site2SFServer2
def Site1DCServer1
def Site1DCServer2
def Site2DCServer1
def Site2DCServer2

//Determine the primary and secondary store fronts and delivery controllers from site1
for (int i=0; i&lt;size; i++)
{
  if(hatype[i].equalsIgnoreCase(&quot;Primary&quot;))
  {
    if(component[i].equalsIgnoreCase(&quot;SF-01&quot;))
    {
      Site1SFServer1 = sysname[i]
    }
    else if(component[i].equalsIgnoreCase(&quot;DC-01&quot;))
    {
      Site1DCServer1 = sysname[i]
    }    
  }
  else if(hatype[i].equalsIgnoreCase(&quot;Secondary&quot;))
  {
     if(component[i].equalsIgnoreCase(&quot;SF-02&quot;))
    {
      Site1SFServer2 = sysname[i]
    }
    else if(component[i].equalsIgnoreCase(&quot;DC-02&quot;))
    {
      Site1DCServer2 = sysname[i]
    }    
  }
}

//Get the storefront and delivery controllers information for the site2 and feed to arrays
def query2 = &quot;select ComponentType, IPAddress, HostName, SiteName, HAType from sfdcinformation where SiteName like &quot;+&quot;&apos;${site2}&apos;&quot;+&quot;;&quot;
sql.eachRow (query2)
{
  component &lt;&lt; it.ComponentType
  IPs &lt;&lt; it.IPAddress
  sysname &lt;&lt; it.HostName
  hatype &lt;&lt; it.HAType
}

//Determine the primary and secondary store fronts and delivery controllers from site2
def size1 = component.size()
for (int i=size; i&lt;size1; i++)
{
  if(hatype[i].equalsIgnoreCase(&quot;Primary&quot;))
  {
    if(component[i].equalsIgnoreCase(&quot;SF-01&quot;))
    {
      Site2SFServer1 = sysname[i]
    }
    else if(component[i].equalsIgnoreCase(&quot;DC-01&quot;))
    {
      Site2DCServer1 = sysname[i]
    }    
  }
  else if(hatype[i].equalsIgnoreCase(&quot;Secondary&quot;))
  {
     if(component[i].equalsIgnoreCase(&quot;SF-02&quot;))
    {
      Site2SFServer2 = sysname[i]
    }
    else if(component[i].equalsIgnoreCase(&quot;DC-02&quot;))
    {
      Site2DCServer2 = sysname[i]
    }    
  }
}

//Creating and writing values to the environmental file created in the workspace folder of the job
def file1 = new File(&apos;C:/Users/nagaraj.nookala/.jenkins/jobs/SiteInformation/workspace/env.properties&apos;)

file1.write(&quot;site1sf1 =&quot;+&apos;&quot;&apos;+&quot;$Site1SFServer1&quot;+&apos;&quot;&apos;+&quot;\r\n&quot;)
file1.append(&quot;site1sf2 = $Site1SFServer2\r\n&quot;)
file1.append(&quot;site2sf1 = $Site1SFServer2\r\n&quot;)
file1.append(&quot;site2sf2 = $Site1SFServer2\r\n&quot;)
file1.append(&quot;site1dc1 = $Site1DCServer1\r\n&quot;)
file1.append(&quot;site1dc2 = $Site1DCServer2\r\n&quot;)
file1.append(&quot;site2dc1 = $Site2DCServer1\r\n&quot;)
file1.append(&quot;site2dc2 = $Site1DCServer1\r\n&quot;)</command>
                        </scriptSource>
                        <bindings></bindings>
                        <classpath></classpath>
                      </hudson.plugins.groovy.SystemGroovy>
                      <hudson.plugins.powershell.PowerShell plugin="powershell@1.3">
                        <command>C:\Users\nagaraj.nookala\.jenkins\jobs\SiteInformation\workspace\Storefront\SFDC.ps1 -Site1StoreFront1 $env:site1sf1 -Site1StoreFront2 $env:site1sf2 -Site1DeliveryController1 $env:site1dc1 -Site1DeliveryController2 $env:site1dc2 -Site2StoreFront1 $env:site2sf1  -Site2StoreFront2 $env:site2sf2 -Site2DeliveryController1 $env:site2dc1 -Site2DeliveryController2 $env:site2dc2</command>
                      </hudson.plugins.powershell.PowerShell>
                    </builders>
                    <publishers/>
                    <buildWrappers/>
                  </hudson.model.FreeStyleProject>
                </entry>
                <entry>
                  <string>SitePair</string>
                  <string>YKT-HRS</string>
                </entry>
              </parameters>
              <referencedParameters>SitePair</referencedParameters>
              <choiceType>ET_UNORDERED_LIST</choiceType>
              <omitValueField>false</omitValueField>
            </org.biouno.unochoice.DynamicReferenceParameter>
          </parameterDefinitions>
        </outer-class>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.envinject.EnvInjectPluginAction plugin="envinject@1.92.1">
      <build class="build" reference="../../.."/>
    </org.jenkinsci.plugins.envinject.EnvInjectPluginAction>
    <hudson.plugins.git.util.BuildData plugin="git@2.4.2">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.19.5">
              <sha1>e4c0f61bceff26d31a837687e6c8e8003d0f1ef9</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>123</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/nooknaga/SiteInfo.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@2.4.2">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/master</string>
          <list/>
        </entry>
      </tags>
      <ws>C:\Users\nagaraj.nookala\.jenkins\jobs\SiteInformation\workspace</ws>
    </hudson.plugins.git.GitTagAction>
    <hudson.scm.SCMRevisionState_-None/>
    <org.jenkinsci.plugins.envinject.EnvInjectBuilderContributionAction plugin="envinject@1.92.1"/>
  </actions>
  <queueId>92</queueId>
  <timestamp>1467912477885</timestamp>
  <startTime>1467912477896</startTime>
  <result>SUCCESS</result>
  <duration>5261</duration>
  <charset>windows-1252</charset>
  <keepLog>false</keepLog>
  <builtOn></builtOn>
  <workspace>C:\Users\nagaraj.nookala\.jenkins\jobs\SiteInformation\workspace</workspace>
  <hudsonVersion>1.651.3</hudsonVersion>
  <scm class="hudson.plugins.git.GitChangeLogParser" plugin="git@2.4.2">
    <authorOrCommitter>false</authorOrCommitter>
  </scm>
  <culprits class="com.google.common.collect.EmptyImmutableSortedSet"/>
</build>