<?xml version='1.0' encoding='UTF-8'?>
<build>
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>SitePair</name>
          <description></description>
          <value>YKT-HRS</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>DCTest</name>
          <description></description>
          <value>[DC-01 10.10.10.13 YKT, DC-02 10.10.10.14 YKT, DC-01 10.30.30.33 HRS, DC-02 10.30.30.34 HRS, SF-01 10.10.10.11 YKT, SF-02 10.10.10.12 YKT, SF-01 10.30.30.31 HRS, SF-02 10.30.30.32 HRS],</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames class="hudson.model.ParametersDefinitionProperty$1">
        <outer-class>
          <parameterDefinitions>
            <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@1.4">
              <name>SitePair</name>
              <description></description>
              <randomName>choice-parameter-688583144922343</randomName>
              <visibleItemCount>3</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List nameslist = new ArrayList()

def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
sql.eachRow (&quot;select distinct SitePairName from sitepair;&quot;)
{
nameslist &lt;&lt; it.SitePairName
}
return nameslist</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <choiceType>PT_SINGLE_SELECT</choiceType>
              <filterable>false</filterable>
            </org.biouno.unochoice.ChoiceParameter>
            <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@1.4">
              <name>DCTest</name>
              <description></description>
              <randomName>choice-parameter-1195180888996813</randomName>
              <visibleItemCount>1</visibleItemCount>
              <script class="org.biouno.unochoice.model.GroovyScript">
                <script>import groovy.sql.Sql

List storefront1 = new ArrayList()
List storefront2 = new ArrayList()

def (site1, site2) = &quot;${SitePair}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query1 = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;DC%&apos; and (SiteName like &quot;+&quot;&apos;${site1}&apos;&quot;+&quot; or SiteName like &quot;+&quot;&apos;${site2}&apos;&quot;+&quot;);&quot;

sql.eachRow (query1)
{
storefront1 &lt;&lt; it.ComponentType+&quot; &quot;+it.IPAddress+&quot; &quot;+it.SiteName

}

def query2 = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;SF%&apos; and (SiteName like &quot;+&quot;&apos;${site1}&apos;&quot;+&quot; or SiteName like &quot;+&quot;&apos;${site2}&apos;&quot;+&quot;);&quot;
sql.eachRow (query2)
{
storefront2 &lt;&lt; it.ComponentType+&quot; &quot;+it.IPAddress+&quot; &quot;+it.SiteName
}
storefront1.addAll(storefront2)

return &quot;&lt;input name=\&quot;value\&quot; value=\&quot;${storefront1}\&quot; class=\&quot;setting-input\&quot; type=\&quot;text\&quot;&gt;&quot;</script>
                <fallbackScript>return[&apos;Script Error&apos;]</fallbackScript>
              </script>
              <projectName>SiteInformation</projectName>
              <parameters class="linked-hash-map">
                <entry>
                  <string>jenkinsProject</string>
                  <hudson.model.FreeStyleProject>
                    <actions/>
                    <description></description>
                    <keepDependencies>false</keepDependencies>
                    <properties>
                      <hudson.model.ParametersDefinitionProperty reference="../../../../../../.."/>
                    </properties>
                    <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.2">
                      <configVersion>2</configVersion>
                      <userRemoteConfigs>
                        <hudson.plugins.git.UserRemoteConfig>
                          <url>https://github.com/nooknaga/SiteInfo.git</url>
                          <credentialsId>91db45a3-3084-4a31-87ac-5e73c13bd35d</credentialsId>
                        </hudson.plugins.git.UserRemoteConfig>
                      </userRemoteConfigs>
                      <branches>
                        <hudson.plugins.git.BranchSpec>
                          <name>*/master</name>
                        </hudson.plugins.git.BranchSpec>
                      </branches>
                      <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
                      <submoduleCfg class="list"/>
                      <extensions/>
                    </scm>
                    <canRoam>true</canRoam>
                    <disabled>false</disabled>
                    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
                    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
                    <triggers/>
                    <concurrentBuild>false</concurrentBuild>
                    <builders>
                      <hudson.plugins.groovy.Groovy plugin="groovy@1.29">
                        <scriptSource class="hudson.plugins.groovy.StringScriptSource">
                          <command>import groovy.sql.Sql

List deliverycontroller = new ArrayList()
List storefront = new ArrayList()

def (site1, site2) = &quot;${SitePair}&quot;.tokenize(&apos;-&apos;)
def sql = Sql.newInstance(&quot;jdbc:mysql://localhost:3306/siteinformation&quot;, &quot;root&quot;, &quot;Advent2016!&quot;, &quot;com.mysql.jdbc.Driver&quot;)
def query1 = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;DC%&apos; and (SiteName like &quot;+&quot;&apos;${site1}&apos;&quot;+&quot; or SiteName like &quot;+&quot;&apos;${site2}&apos;&quot;+&quot;);&quot;

sql.eachRow (query1)
{
deliverycontroller &lt;&lt; it.IPAddress
}


def query2 = &quot;select ComponentType, IPAddress, SiteName from sfdcinformation where ComponentType like &apos;SF%&apos; and (SiteName like &quot;+&quot;&apos;${site1}&apos;&quot;+&quot; or SiteName like &quot;+&quot;&apos;${site2}&apos;&quot;+&quot;);&quot;
sql.eachRow (query2)
{
storefront &lt;&lt; it.IPAddress
}


def csize = deliverycontroller.size()
def ssize = storefront.size()
for (int i=0; i&lt;csize; i++)
{
  println deliverycontroller[i]
}

for (int j=0; j&lt;ssize; j++)
{
  println storefront[j]
}

</command>
                        </scriptSource>
                        <groovyName>(Default)</groovyName>
                        <parameters></parameters>
                        <scriptParameters></scriptParameters>
                        <properties></properties>
                        <javaOpts></javaOpts>
                        <classPath></classPath>
                      </hudson.plugins.groovy.Groovy>
                    </builders>
                    <publishers/>
                    <buildWrappers/>
                  </hudson.model.FreeStyleProject>
                </entry>
                <entry>
                  <string>SitePair</string>
                  <string>YKT-HRS</string>
                </entry>
              </parameters>
              <referencedParameters>SitePair</referencedParameters>
              <choiceType>ET_FORMATTED_HTML</choiceType>
              <omitValueField>false</omitValueField>
            </org.biouno.unochoice.DynamicReferenceParameter>
          </parameterDefinitions>
        </outer-class>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.plugins.git.util.BuildData plugin="git@2.4.2">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.19.5">
              <sha1>a20a07773995278fde383223a54897761fc33799</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>15</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/nooknaga/SiteInfo.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@2.4.2">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/master</string>
          <list/>
        </entry>
      </tags>
      <ws>C:\Users\nagaraj.nookala\.jenkins\jobs\SiteInformation\workspace</ws>
    </hudson.plugins.git.GitTagAction>
    <hudson.scm.SCMRevisionState_-None/>
  </actions>
  <queueId>8</queueId>
  <timestamp>1467700508234</timestamp>
  <startTime>1467700508247</startTime>
  <result>FAILURE</result>
  <duration>4936</duration>
  <charset>windows-1252</charset>
  <keepLog>false</keepLog>
  <builtOn></builtOn>
  <workspace>C:\Users\nagaraj.nookala\.jenkins\jobs\SiteInformation\workspace</workspace>
  <hudsonVersion>1.651.3</hudsonVersion>
  <scm class="hudson.plugins.git.GitChangeLogParser" plugin="git@2.4.2">
    <authorOrCommitter>false</authorOrCommitter>
  </scm>
  <culprits class="com.google.common.collect.EmptyImmutableSortedSet"/>
</build>